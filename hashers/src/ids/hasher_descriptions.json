{
  "BLAKE": "BLAKE was a competitor and finalist for the SHA-3 competition. It uses many of the same constants as SHA-2 but a different internal structure, a hash iterative framework, that eliminates SHA-2's vulernability to length extension attacks. The mixing round of BLAKE is a modified version of the ChaCha cipher.",
  "BLAKE2": "The BLAKE2 family of hash functions are closely related to the original BLAKE family of hash functions which were finalists for the SHA-3 competition. To improve speed the BLAKE2 hashers have fewer compression rounds and pad the input in a simpler way. They are designed to work as drop in replacements to broken hash functions such as SHA-1 and MD5, offering both superior security and supere speed.",
  "BLAKE3": "BLAKE3 is a hash function based on the BLAKE2 family. Rather than have numerous variants BLAKE3 is a single algorithm with different functionality provided by input parameters. It uses a tree construction to allow effectively unlimited parallelism for hashing large inputs. The three operation modes are an ordinary hash, a keyed hash mode with a 256 bit key that allows it to work has an HMAC, and a key derivation mode that takes a globally unique context of any length for creating subkeys.",
  "FNV Hash": "The FNV (Fowler-Noll-Vo) hash family is meant to run very quickly while avoiding collisions but not to provide cryptographic security. Its compression function consits of a single multiplication and a single XOR operation for each byte.",
  "FxHash": "FxHash is inspired by the FNV family of hash functions in its goal of extreme speed. Unlike FNV it takes the message in larger chunks rather than one byte at a time and uses a rotation rather than an XOR.",
  "HMAC": "HMAC (Hash-based Message Authentication Code) is a technique for created a keyed hash function from any hash function. Once a shared secret is established a keyed hash function allows the reciever to determine that a message has not been altered or replaced in transit. HMAC specifially addresses the length extension weakness of Merkle-Damgård based hash functions but can be used with any hash function. Some unkeyed hash functions such as SHA3 can be used as keyed hash functions without HMAC simply by making the key part of the message.",
  "MD4": "The MD4 hash function, created by Ronald Rivest in 1990, is an obsolete hash algorithm that influenced the design of later hash functions. It produces a 128 bit (16 byte) hash.",
  "MD5": "The MD5 hash function, created by Ronald Rivest in 1991, is among the best known and most widely used in history. It produces a 128 bit (16 byte) hash. Weaknesses were discovered in the algorithm within a few years that resulted in its deprecation for secure purposes. It wasn't until 2004, however, that collisions were discovered. Today MD5 is used to verify message integrity against accidental changes.",
  "MGF1": "MGF1 (Mask Generating Fuction 1) is a function designed to use a hash function to generate a pseudorandom sequence of bytes with length of up to 2^32. It simply appends a 32-bit counter to a key and hashes that input, counting up by one each time. It is defined as part of the RSA standard for use in generating padding. While any hash function can be used as the basis for MGF1 here just the family of SHA-2 hash functions are provided.",
  "LM": "LM is a legacy password hashing function sometimes used by the Windows operating system. The password can be no more than 14 characters and converts letters to upper case before hashing. It is considered extremely vulnerable to attack has been disabled by default on versions of Windows released since around 2008.",
  "PBKDF2": "PBKDF2 (Password Based Key Derivation Function 2) is an adjustable key derivation function. It uses an HMAC iternally and applies is numerous times to increase the computation cost of calculating the key.",
  "Pearson": "Pearson hashing, created by Peter Pearson in 1990, is one of the simplest hashing algorithms. It produces an 8 bit (1 byte) hash. While it runs quickly it has almost no collision resistance and was designed to create hashes for small numbers of short inputs.",
  "Poly1305": "Poly1305 is a universal family of hash functions based on evaluating a polynomial modulo the prime 2^130 - 5. The message is divided into 16 byte blocks which are used to create the coefficients of the polynomial which is evaluated at the point 'r' which serves as the key for the hash. Poly1305 accepts a second key when used a message authenticator. The special value of Poly1305 lies in the fact that a proof exists that when used as an authenticator the security of the system relies only on the security of the cipher (usually AES) used to generate the secondary key.",
  "RadioGatún": "The RadioGatún hash function was created in 2006 by the same team that would eventually develop Keccak used a heavily revised version of RadioGatún. The output length is variable, here limited to 512 bits. It is authors advise against directly using it as a cryptographic hash function.",
  "SHA-0": "SHA-0 was the original cryptographic hash function designed by the US National Security Agency, first specified is 1992. It produces a 160 bit (20 byte) hash. In 1995, shortly after being official published, it was withdrawn and replaced with SHA-1, which differs only in the addition of a one bit rotation during the expansion step of the compression function, to correct an unspecified security flaw. Practical attacks on SHA-0 have been publicly known since 2004.",
  "SHA-1": "SHA-1 is a cryptographic hash function designed by the US National Security Agency, first released is 1995. It produces a 160 bit (20 byte) hash. Practical attacks on SHA-1 have been publicly known since 2017",
  "SHA-2": "SHA-2 is a family of cryptographic hash funtions designed by the US National Security Agency, each named for the size of the hash they produce in bits. The family is based on two closely related algorithms SHA-256 and SHA-512 with variants of each designed to resist length extension attacks by omitting part of the hash function's state from the output.",
  "SHA-3 (Keccak)": "The winner of the SHA-3 competition by the Amerian NIST was Keccak (pronounced \"ketchak\"), a hash algorithm using a sponge construction.",
  "SipHash": "SipHash is a family of keyed hash functions all of which take a 128 bit (16 byte) key and produce a 64 bit (8 byte) hash. The small hash size is appropriate for use in hash tables but, as a result, carries a higher risk of collisions. While these collisions are unlikely to occur randomly malicious inputs could feasibly produce hundreds of collisions which would cause the hashmap to have severely degraded performance, causing a denial of service attack. The key prevents an attacker from being able to know what the hashes will be making this kind of attack impractical. Each SipHash version is referred to has SipHash-c-d where c is the number of compression rounds and d is the number of finalization rounds. SipHash-2-4 is very common while the slower SipHash-4-8 is more secure. The faster SipHash-1-3 is not kown to be broken but provides little security margin."
}