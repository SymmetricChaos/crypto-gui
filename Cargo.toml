[package]
name = "crypto-gui"
version = "0.1.0"
authors = ["Alexander"]
edition = "2021"
include = ["LICENSE-APACHE", "LICENSE-MIT", "**/*.rs", "Cargo.toml"]
rust-version = "1.85"

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[workspace]
members = ["ciphers", "codes", "utils", "rngs", "hashers"]

[dependencies]
egui = "0.29"
eframe = { version = "0.29", default-features = false, features = [
    "accesskit",     # Make egui compatible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    #"persistence",   # Enable restoring app state when restarting the app.
] }
log = "0.4"


egui_extras = { version = "0.29", features = ["all_loaders"] }


ciphers = {path = "ciphers"}
codes = {path = "codes"}
utils = {path = "utils"}
rngs = {path = "rngs"}
hashers = {path = "hashers"}

num = "0.4.1"
num-prime = "0.4.3"
itertools = "0.10.0"
rand = "0.8.3"
getrandom = { version = "0.2", features = ["js"] }
json = "0.12.4"
csv = "1.2.1"
primal = "0.3.0"
unicode-normalization = "0.1.19"
unicode-segmentation = "1.9.0"
bimap = "0.6.3"
regex = "1"
strsim = "0.11.0"
strum = { version = "0.26", features = ["derive"] }
paste = "1.0.15"
crypto-bigint = { version = "0.6.1" }

# You only need serde if you want app persistence:
# serde = { version = "1", features = ["derive"] }

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.10"

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4"

# to access the DOM (to hide the loading text)
[target.'cfg(target_arch = "wasm32")'.dependencies.web-sys]
version = "0.3.4"

[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
