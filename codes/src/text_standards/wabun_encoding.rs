use lazy_static::lazy_static;
use std::collections::HashMap;

// the organization of the array should be preserved for legibility
#[rustfmt::skip]
pub const HIRAGANA: [&str; 119] = [
    "あ", "い", "う", "え", "お",
    "か", "き", "く", "け", "こ",   "きゃ", "きゅ", "きょ",
    "さ", "し", "す", "せ", "そ",   "しゃ", "しゅ", "しょ",
    "た", "ち", "つ", "て", "と",   "ちゃ", "ちゅ", "ちょ",
    "な", "に", "ぬ", "ね", "の",   "にゃ", "にゅ", "にょ",
    "は", "ひ", "ふ", "へ", "ほ",   "ひゃ", "ひゅ", "ひょ",
    "ま", "み", "む", "め", "も",   "みゃ", "みゅ", "みょ",
    "や",       "ゆ",       "よ",
    "ら", "り", "る", "れ", "ろ",   "りゃ", "りゅ", "りょ",
    "わ", "ゐ",       "ゑ", "を",
    "ん",
    "が", "ぎ", "ぐ", "げ", "ご",   "ぎゃ", "ぎゅ", "ぎょ",
    "ざ", "じ", "ず", "ぜ", "ぞ",   "じゃ", "じゅ", "じょ",
    "だ", "ぢ", "づ", "で", "ど",   "ぢゃ", "ぢゅ", "ぢょ",
    "ば", "び", "ぶ", "べ", "ぼ",   "びゃ", "びゅ", "びょ",
    "ぱ", "ぴ", "ぷ", "ぺ", "ぽ",   "ぴゃ", "ぴゅ", "ぴょ",
    "、", "。", "ー", "（", "）", "゛", "゜", "っ", "DO", "SN"
];
#[rustfmt::skip]
const KATAKANA: [&str; 119] = [
    "ア", "イ", "ウ", "エ", "オ",    
    "カ", "キ", "ク", "ケ", "コ",   "キャ", "キュ", "キョ",
    "サ", "シ", "ス", "セ", "ソ",   "シャ", "シュ", "ショ",
    "タ", "チ", "ツ", "テ", "ト",   "チャ", "チュ", "チョ",
    "ナ", "ニ", "ヌ", "ネ", "ノ",   "ニャ", "ニュ", "ニョ",
    "ハ", "ヒ", "フ", "ヘ", "ホ",   "ヒャ", "ヒュ", "ヒョ",
    "マ", "ミ", "ム", "メ", "モ",   "ミャ", "ミュ", "ミョ",
    "ヤ",       "ユ",       "ヨ",   
    "ラ", "リ", "ル", "レ", "ロ",   "リャ", "リュ", "リョ",
    "ワ", "ヰ",       "ヱ", "ヲ",  
    "ン", 
    "ガ", "ギ", "グ", "ゲ", "ゴ",   "ギャ", "ギュ", "ギョ",
    "ザ", "ジ", "ズ", "ゼ", "ゾ",   "ジャ", "ジュ", "ジョ",
    "ダ", "ヂ", "ヅ", "デ", "ド",   "ヂャ", "ヂュ", "ヂョ",
    "バ", "ビ", "ブ", "ベ", "ボ",   "ビャ", "ビュ", "ビョ",
    "パ", "ピ", "プ", "ペ", "ポ",   "ピャ", "ピュ", "ピョ",
    "、", "。", "ー", "（", "）", "゛", "゜", "ッ", "DO", "SN"
];
#[rustfmt::skip]
pub const WABUN_ASCII: [&str; 119] = [
    "--.--", ".-", "..-", "-.---", ".-...",
    ".-..", "-.-..", "...-", "-.--", "----", "-.-.. .--", "-.-.. -..--", "-.-.. --", 
    "-.-.-", "--.-.", "---.-", ".---.", "---.", "--.-. .--", "--.-. -..--", "--.-. --", 
    "-.", "..-.", ".--.", ".-.--", "..-..", "..-. .--", "..-. -..--", "..-. --", 
    ".-.", "-.-.", "....", "--.-", "..--", "-.-. .--", "-.-. -..--", "-.-. --", 
    "-...", "--..-", "--..", ".", "-..", "--..- .--", "--..- -..--", "--..- --", 
    "-..-", "..-.-", "-", "-...-", "-..-.", "..-.- .--", "..-.- -..--", "..-.- --",
    ".--", "-..--", "--",
    "...", "--.", "-.--.", "---", ".-.-", "--. .--", "--. -..--", "--. --",
    "-.-", ".-..-", ".--..", ".---",
    ".-.-.",
    ".-.. ..", "-.-.. ..", "...- ..", "-.-- ..", "---- ..", "-.-.. .. .--", "-.-.. .. -..--", "-.-.. .. --", 
    "-.-.- ..", "--.-. ..", "---.- ..", ".---. ..", "---. ..", "--.-. .. .--", "--.-. .. -..--", "--.-. .. --", 
    "-. ..", "..-. ..", ".--. ..", ".-.-- ..", "..-.. ..", "..-. .. .--", "..-. .. -..--", "..-. .. --", 
    "-... ..", "--..- ..", "--.. ..", ". ..", "-.. ..", "--..- .. .--", "--..- .. -..--", "--..- .. --",
    "-... ..--.", "--..- ..--.", "--.. ..--.", ". ..--.", "-.. ..--.", "--..- ..--. .--", "--..- ..--. -..--", "--..- ..--. --",
    ".-.-.-", ".-.-..", ".--.-", "-.--.-", ".-..-.", "..", "..--.", ".--.", "-..---", "...-."
];

pub const WABUN_HALFBLOCK: [&str; 119] = [
    "▄▄▄ ▄▄▄ ▄ ▄▄▄ ▄▄▄",
    "▄ ▄▄▄",
    "▄ ▄ ▄▄▄",
    "▄▄▄ ▄ ▄▄▄ ▄▄▄ ▄▄▄",
    "▄ ▄▄▄ ▄ ▄ ▄",
    "▄ ▄▄▄ ▄ ▄",
    "▄▄▄ ▄ ▄▄▄ ▄ ▄",
    "▄ ▄ ▄ ▄▄▄",
    "▄▄▄ ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄▄▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄ ▄▄▄ ▄ ▄   ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄ ▄▄▄ ▄ ▄   ▄▄▄ ▄ ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄ ▄▄▄ ▄ ▄   ▄▄▄ ▄▄▄",
    "▄▄▄ ▄ ▄▄▄ ▄ ▄▄▄",
    "▄▄▄ ▄▄▄ ▄ ▄▄▄ ▄",
    "▄▄▄ ▄▄▄ ▄▄▄ ▄ ▄▄▄",
    "▄ ▄▄▄ ▄▄▄ ▄▄▄ ▄",
    "▄▄▄ ▄▄▄ ▄▄▄ ▄",
    "▄▄▄ ▄▄▄ ▄ ▄▄▄ ▄   ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄▄▄ ▄ ▄▄▄ ▄   ▄▄▄ ▄ ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄▄▄ ▄ ▄▄▄ ▄   ▄▄▄ ▄▄▄",
    "▄▄▄ ▄",
    "▄ ▄ ▄▄▄ ▄",
    "▄ ▄▄▄ ▄▄▄ ▄",
    "▄ ▄▄▄ ▄ ▄▄▄ ▄▄▄",
    "▄ ▄ ▄▄▄ ▄ ▄",
    "▄ ▄ ▄▄▄ ▄   ▄ ▄▄▄ ▄▄▄",
    "▄ ▄ ▄▄▄ ▄   ▄▄▄ ▄ ▄ ▄▄▄ ▄▄▄",
    "▄ ▄ ▄▄▄ ▄   ▄▄▄ ▄▄▄",
    "▄ ▄▄▄ ▄",
    "▄▄▄ ▄ ▄▄▄ ▄",
    "▄ ▄ ▄ ▄",
    "▄▄▄ ▄▄▄ ▄ ▄▄▄",
    "▄ ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄ ▄▄▄ ▄   ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄ ▄▄▄ ▄   ▄▄▄ ▄ ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄ ▄▄▄ ▄   ▄▄▄ ▄▄▄",
    "▄▄▄ ▄ ▄ ▄",
    "▄▄▄ ▄▄▄ ▄ ▄ ▄▄▄",
    "▄▄▄ ▄▄▄ ▄ ▄",
    "▄",
    "▄▄▄ ▄ ▄",
    "▄▄▄ ▄▄▄ ▄ ▄ ▄▄▄   ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄▄▄ ▄ ▄ ▄▄▄   ▄▄▄ ▄ ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄▄▄ ▄ ▄ ▄▄▄   ▄▄▄ ▄▄▄",
    "▄▄▄ ▄ ▄ ▄▄▄",
    "▄ ▄ ▄▄▄ ▄ ▄▄▄",
    "▄▄▄",
    "▄▄▄ ▄ ▄ ▄ ▄▄▄",
    "▄▄▄ ▄ ▄ ▄▄▄ ▄",
    "▄ ▄ ▄▄▄ ▄ ▄▄▄   ▄ ▄▄▄ ▄▄▄",
    "▄ ▄ ▄▄▄ ▄ ▄▄▄   ▄▄▄ ▄ ▄ ▄▄▄ ▄▄▄",
    "▄ ▄ ▄▄▄ ▄ ▄▄▄   ▄▄▄ ▄▄▄",
    "▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄ ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄▄▄",
    "▄ ▄ ▄",
    "▄▄▄ ▄▄▄ ▄",
    "▄▄▄ ▄ ▄▄▄ ▄▄▄ ▄",
    "▄▄▄ ▄▄▄ ▄▄▄",
    "▄ ▄▄▄ ▄ ▄▄▄",
    "▄▄▄ ▄▄▄ ▄   ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄▄▄ ▄   ▄▄▄ ▄ ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄▄▄ ▄   ▄▄▄ ▄▄▄",
    "▄▄▄ ▄ ▄▄▄",
    "▄ ▄▄▄ ▄ ▄ ▄▄▄",
    "▄ ▄▄▄ ▄▄▄ ▄ ▄",
    "▄ ▄▄▄ ▄▄▄ ▄▄▄",
    "▄ ▄▄▄ ▄ ▄▄▄ ▄",
    "▄ ▄▄▄ ▄ ▄   ▄ ▄",
    "▄▄▄ ▄ ▄▄▄ ▄ ▄   ▄ ▄",
    "▄ ▄ ▄ ▄▄▄   ▄ ▄",
    "▄▄▄ ▄ ▄▄▄ ▄▄▄   ▄ ▄",
    "▄▄▄ ▄▄▄ ▄▄▄ ▄▄▄   ▄ ▄",
    "▄▄▄ ▄ ▄▄▄ ▄ ▄   ▄ ▄   ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄ ▄▄▄ ▄ ▄   ▄ ▄   ▄▄▄ ▄ ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄ ▄▄▄ ▄ ▄   ▄ ▄   ▄▄▄ ▄▄▄",
    "▄▄▄ ▄ ▄▄▄ ▄ ▄▄▄   ▄ ▄",
    "▄▄▄ ▄▄▄ ▄ ▄▄▄ ▄   ▄ ▄",
    "▄▄▄ ▄▄▄ ▄▄▄ ▄ ▄▄▄   ▄ ▄",
    "▄ ▄▄▄ ▄▄▄ ▄▄▄ ▄   ▄ ▄",
    "▄▄▄ ▄▄▄ ▄▄▄ ▄   ▄ ▄",
    "▄▄▄ ▄▄▄ ▄ ▄▄▄ ▄   ▄ ▄   ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄▄▄ ▄ ▄▄▄ ▄   ▄ ▄   ▄▄▄ ▄ ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄▄▄ ▄ ▄▄▄ ▄   ▄ ▄   ▄▄▄ ▄▄▄",
    "▄▄▄ ▄   ▄ ▄",
    "▄ ▄ ▄▄▄ ▄   ▄ ▄",
    "▄ ▄▄▄ ▄▄▄ ▄   ▄ ▄",
    "▄ ▄▄▄ ▄ ▄▄▄ ▄▄▄   ▄ ▄",
    "▄ ▄ ▄▄▄ ▄ ▄   ▄ ▄",
    "▄ ▄ ▄▄▄ ▄   ▄ ▄   ▄ ▄▄▄ ▄▄▄",
    "▄ ▄ ▄▄▄ ▄   ▄ ▄   ▄▄▄ ▄ ▄ ▄▄▄ ▄▄▄",
    "▄ ▄ ▄▄▄ ▄   ▄ ▄   ▄▄▄ ▄▄▄",
    "▄▄▄ ▄ ▄ ▄   ▄ ▄",
    "▄▄▄ ▄▄▄ ▄ ▄ ▄▄▄   ▄ ▄",
    "▄▄▄ ▄▄▄ ▄ ▄   ▄ ▄",
    "▄   ▄ ▄",
    "▄▄▄ ▄ ▄   ▄ ▄",
    "▄▄▄ ▄▄▄ ▄ ▄ ▄▄▄   ▄ ▄   ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄▄▄ ▄ ▄ ▄▄▄   ▄ ▄   ▄▄▄ ▄ ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄▄▄ ▄ ▄ ▄▄▄   ▄ ▄   ▄▄▄ ▄▄▄",
    "▄▄▄ ▄ ▄ ▄   ▄ ▄ ▄▄▄ ▄▄▄ ▄",
    "▄▄▄ ▄▄▄ ▄ ▄ ▄▄▄   ▄ ▄ ▄▄▄ ▄▄▄ ▄",
    "▄▄▄ ▄▄▄ ▄ ▄   ▄ ▄ ▄▄▄ ▄▄▄ ▄",
    "▄   ▄ ▄ ▄▄▄ ▄▄▄ ▄",
    "▄▄▄ ▄ ▄   ▄ ▄ ▄▄▄ ▄▄▄ ▄",
    "▄▄▄ ▄▄▄ ▄ ▄ ▄▄▄   ▄ ▄ ▄▄▄ ▄▄▄ ▄   ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄▄▄ ▄ ▄ ▄▄▄   ▄ ▄ ▄▄▄ ▄▄▄ ▄   ▄▄▄ ▄ ▄ ▄▄▄ ▄▄▄",
    "▄▄▄ ▄▄▄ ▄ ▄ ▄▄▄   ▄ ▄ ▄▄▄ ▄▄▄ ▄   ▄▄▄ ▄▄▄",
    "▄ ▄▄▄ ▄ ▄▄▄ ▄ ▄▄▄",
    "▄ ▄▄▄ ▄ ▄▄▄ ▄ ▄",
    "▄ ▄▄▄ ▄▄▄ ▄ ▄▄▄",
    "▄▄▄ ▄ ▄▄▄ ▄▄▄ ▄ ▄▄▄",
    "▄ ▄▄▄ ▄ ▄ ▄▄▄ ▄",
    "▄ ▄",
    "▄ ▄ ▄▄▄ ▄▄▄ ▄",
    "▄ ▄▄▄ ▄▄▄ ▄",
    "▄▄▄ ▄ ▄ ▄▄▄ ▄▄▄ ▄▄▄",
    "▄ ▄ ▄ ▄▄▄ ▄",
];
pub const WABUN_WORD: [&str; 119] = [
    "dah dah di dah dah",
    "di dah",
    "di di dah",
    "dah di dah dah dah",
    "di dah di di dit",
    "di dah di dit",
    "dah di dah di dit",
    "di di di dah",
    "dah di dah dah",
    "dah dah dah dah",
    "dah di dah di dit   di dah dah",
    "dah di dah di dit   dah di di dah dah",
    "dah di dah di dit   dah dah",
    "dah di dah di dah",
    "dah dah di dah dit",
    "dah dah dah di dah",
    "di dah dah dah dit",
    "dah dah dah dit",
    "dah dah di dah dit   di dah dah",
    "dah dah di dah dit   dah di di dah dah",
    "dah dah di dah dit   dah dah",
    "dah dit",
    "di di dah dit",
    "di dah dah dit",
    "di dah di dah dah",
    "di di dah di dit",
    "di di dah dit   di dah dah",
    "di di dah dit   dah di di dah dah",
    "di di dah dit   dah dah",
    "di dah dit",
    "dah di dah dit",
    "di di di dit",
    "dah dah di dah",
    "di di dah dah",
    "dah di dah dit   di dah dah",
    "dah di dah dit   dah di di dah dah",
    "dah di dah dit   dah dah",
    "dah di di dit",
    "dah dah di di dah",
    "dah dah di dit",
    "dit",
    "dah di dit",
    "dah dah di di dah   di dah dah",
    "dah dah di di dah   dah di di dah dah",
    "dah dah di di dah   dah dah",
    "dah di di dah",
    "di di dah di dah",
    "dah",
    "dah di di di dah",
    "dah di di dah dit",
    "di di dah di dah   di dah dah",
    "di di dah di dah   dah di di dah dah",
    "di di dah di dah   dah dah",
    "di dah dah",
    "dah di di dah dah",
    "dah dah",
    "di di dit",
    "dah dah dit",
    "dah di dah dah dit",
    "dah dah dah",
    "di dah di dah",
    "dah dah dit   di dah dah",
    "dah dah dit   dah di di dah dah",
    "dah dah dit   dah dah",
    "dah di dah",
    "di dah di di dah",
    "di dah dah di dit",
    "di dah dah dah",
    "di dah di dah dit",
    "di dah di dit   di dit",
    "dah di dah di dit   di dit",
    "di di di dah   di dit",
    "dah di dah dah   di dit",
    "dah dah dah dah   di dit",
    "dah di dah di dit   di dit   di dah dah",
    "dah di dah di dit   di dit   dah di di dah dah",
    "dah di dah di dit   di dit   dah dah",
    "dah di dah di dah   di dit",
    "dah dah di dah dit   di dit",
    "dah dah dah di dah   di dit",
    "di dah dah dah dit   di dit",
    "dah dah dah dit   di dit",
    "dah dah di dah dit   di dit   di dah dah",
    "dah dah di dah dit   di dit   dah di di dah dah",
    "dah dah di dah dit   di dit   dah dah",
    "dah dit   di dit",
    "di di dah dit   di dit",
    "di dah dah dit   di dit",
    "di dah di dah dah   di dit",
    "di di dah di dit   di dit",
    "di di dah dit   di dit   di dah dah",
    "di di dah dit   di dit   dah di di dah dah",
    "di di dah dit   di dit   dah dah",
    "dah di di dit   di dit",
    "dah dah di di dah   di dit",
    "dah dah di dit   di dit",
    "dit   di dit",
    "dah di dit   di dit",
    "dah dah di di dah   di dit   di dah dah",
    "dah dah di di dah   di dit   dah di di dah dah",
    "dah dah di di dah   di dit   dah dah",
    "dah di di dit   di di dah dah dit",
    "dah dah di di dah   di di dah dah dit",
    "dah dah di dit   di di dah dah dit",
    "dit   di di dah dah dit",
    "dah di dit   di di dah dah dit",
    "dah dah di di dah   di di dah dah dit   di dah dah",
    "dah dah di di dah   di di dah dah dit   dah di di dah dah",
    "dah dah di di dah   di di dah dah dit   dah dah",
    "di dah di dah di dah",
    "di dah di dah di dit",
    "di dah dah di dah",
    "dah di dah dah di dah",
    "di dah di di dah dit",
    "di dit",
    "di di dah dah dit",
    "di dah dah dit",
    "dah di di dah dah dah",
    "di di di dah dit",
];

lazy_static! {
    pub static ref KANA_TO_ASCII: HashMap<&'static str, &'static str> = {
        let mut h = HashMap::from_iter(HIRAGANA.into_iter().zip(WABUN_ASCII.into_iter()));
        h.extend(KATAKANA.into_iter().zip(WABUN_ASCII.into_iter()));
        h
    };
    pub static ref KANA_TO_HALFBLOCK: HashMap<&'static str, &'static str> = {
        let mut h = HashMap::from_iter(HIRAGANA.into_iter().zip(WABUN_HALFBLOCK.into_iter()));
        h.extend(KATAKANA.into_iter().zip(WABUN_HALFBLOCK.into_iter()));
        h
    };
    pub static ref KANA_TO_WORD: HashMap<&'static str, &'static str> = {
        let mut h = HashMap::from_iter(HIRAGANA.into_iter().zip(WABUN_WORD.into_iter()));
        h.extend(KATAKANA.into_iter().zip(WABUN_WORD.into_iter()));
        h
    };
    pub static ref ASCII_TO_HIRA: HashMap<&'static str, &'static str> =
        HashMap::from_iter(WABUN_ASCII.into_iter().zip(HIRAGANA.into_iter()));
    pub static ref HALFBLOCK_TO_HIRA: HashMap<&'static str, &'static str> =
        HashMap::from_iter(WABUN_HALFBLOCK.into_iter().zip(HIRAGANA.into_iter()));
    pub static ref WORD_TO_HIRA: HashMap<&'static str, &'static str> =
        HashMap::from_iter(WABUN_WORD.into_iter().zip(HIRAGANA.into_iter()));
}

#[cfg(test)]
mod wabun_tests {
    use super::*;
    #[test]
    #[ignore = "visual correctness check"]
    fn wabun_pairs() {
        for symbol in HIRAGANA.into_iter().chain(KATAKANA) {
            println!("{symbol} {}", KANA_TO_ASCII.get(symbol).unwrap())
        }
    }
}
